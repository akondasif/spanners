<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <artifactId>spanners-ws</artifactId>
    <name>spanners-ws</name>
    <packaging>war</packaging>
    
    <parent>
        <groupId>org.dontpanic</groupId>
        <artifactId>spanners-pom</artifactId>
        <version>1.3</version>
    </parent>
    
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jetty.port>8888</jetty.port>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.dontpanic</groupId>
            <artifactId>spanners-dao</artifactId>
            <version>1.3</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.messaging.saaj</groupId>
            <artifactId>saaj-impl</artifactId>
            <version>1.3</version>
            <scope>provided</scope>
        </dependency>       
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.4</version>
            <scope>provided</scope>
        </dependency>            
        <dependency>
            <groupId>javax.xml.soap</groupId>
            <artifactId>saaj-api</artifactId>
            <version>1.3</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jaxen</groupId>
            <artifactId>jaxen</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>jdom</groupId>
            <artifactId>jdom</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring</artifactId>
            <version>2.0</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.ws</groupId>
            <artifactId>spring-ws-core</artifactId>
            <version>1.5.9</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.ws</groupId>
            <artifactId>spring-ws-security</artifactId>
            <version>1.5.9</version>
        </dependency>

    </dependencies>

    <!-- to access the SoapUI plugin -->
    <pluginRepositories>
        <pluginRepository>
            <id>eviwarePluginRepository</id>
            <url>http://www.eviware.com/repository/maven2/</url>
        </pluginRepository>
    </pluginRepositories>


    <build>
        <defaultGoal>package</defaultGoal>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                </configuration>
            </plugin>

            <!-- soapui plugin runs SOAP UI tests during test phase.
                 This assumes that the Jetty server is already running. -->
            <plugin>
                <groupId>eviware</groupId>
                <artifactId>maven-soapui-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <projectFile>${basedir}/src/test/spannersws-soapui-project.xml</projectFile>
                    <host>localhost:${jetty.port}</host>
                    <printReport>true</printReport>
                    <outputFolder>${project.build.directory}/soapui-test</outputFolder>
                </configuration>
                <executions>
                    <execution>
                        <id>soapui-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <!-- soapui plugin fails if you don't explicitly add this dependency -->
                    <dependency>
                        <groupId>xmlunit</groupId>
                        <artifactId>xmlunit</artifactId>
                        <version>1.3</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- Jetty Server. run and stop goals are bound to maven phases such that it will
                 start before tests are run and stop after they're complete.
                 Application can be run standalone using "mvn jetty:run" -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>7.2.2.v20101205</version>
                <configuration>
                    <stopPort>8081</stopPort>
                    <stopKey>stop</stopKey>
                    <useTestClasspath>true</useTestClasspath>
                    <webAppConfig>
                        <!-- Override the main app web.xml. The original contains JNDI config that
                             we do not want to configure in Jetty. This test web.xml does not contain
                             JNDI references. It points at Spring configured stub DAOs instead. -->
                        <descriptor>${basedir}/src/test/web.xml</descriptor>
                    </webAppConfig>
                    <connectors>
                        <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
                            <port>${jetty.port}</port>
                            <maxIdleTime>60000</maxIdleTime>
                        </connector>
                    </connectors>
                </configuration>
                <executions>
                    <execution>
                        <id>start-jetty</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <daemon>true</daemon>
                            <reload>manual</reload>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop-jetty</id>
                        <phase>test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
    
</project>
